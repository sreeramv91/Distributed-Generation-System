clear variables;
clc;
close all;

Van = 0;
Cond_comm=1;

% Pole States
Te = 8.75;

% Define Generator Constants
%===================================

Ld = 0.0017;     % d axis Inductance
Lq = Ld;        % q axis Inductance (symmetrical machine with no saliency)
npp = 4;        % number of pole pairs
rstator = 0.86;      % Stator Resistance
Rload= 100;
J = 0.5;        % Moment of Inertia
lambda_m = 0.33; % Permanent Magnet Flux Linkage
Bm = 0.01;      % Friction Constant of generator



% Initial System Mechanical States
RPM = 900;
wr = RPM*2*pi/60;  % machine rotor speed in rad/sec
we=npp*wr;         % electrical speed in rad/sec
% lambda_qs=0;
% lambda_ds=0;
% lambda_os=0;
iqs = 0;
ids = 0;
ios = 0;

% vqs_sim & vds_sim are used to create simulated vas, vbs, and vcs

% vqs_sim sets the terminal voltage to the back emf

% vds_sim adds the quadrature current for torque
vqs=rstator*iqs+we*lambda_m + we*Ld*ids;         % The Eq reference : 4.4-1
vds=rstator*ids-we*Lq*iqs;
v0s = 0;
theta_r = 0;

%constants
rs = 0.5;
ls = 0.1*10e-3;
% c = 1/(120 * pi * sqrt(ls))^2;
c = 31.85*10e-9;
rc = 100;
lf = 7*10e-3;
rf = 20;
rl = 1;
h=1e-6; %step size
j=0;
t=0;
tmax=0.25;
teta1=pi;
w1=2*pi*60;
tpwm=0;
Ts=1000e-6; %switching period (fs=10kHz)
ias=0;
ibs=0;
ics=0;
Vdc=250;
vao = 0;
vbo = 0;
vco = 0;
vao2 = 0;
vbo2 = 0;
vco2 = 0;
iao = 0;
ibo = 0;
ico = 0;

while t<=tmax
    t = t+h;
    % ==========================================
    
    theta_r = theta_r+h*we;   % index theta
    if theta_r >= 2*pi
        theta_r = theta_r-2*pi;
    end
    
    teta1=teta1+h*w1;
    if teta1 >= 2*pi
        teta1=teta1-2*pi;
    end
    
    vas_dist = vqs*cos(theta_r) + vds*sin(theta_r) + v0s;
    vbs_dist = vqs*cos(theta_r-2*pi/3) + vds*sin(theta_r-2*pi/3) + v0s;
    vcs_dist = vqs*cos(theta_r+2*pi/3) + vds*sin(theta_r+2*pi/3) + v0s;
    
    ids =(-lambda_m)/Ld;
    iqs = (3/2)*(1/npp)*Te/lambda_m;
    ios = 0;
    
    %inverse park transformations
    
    ias_dist = iqs*cos(theta_r) + ids*sin(theta_r) + ios;
    ibs_dist = iqs*cos(theta_r-2*pi/3) + ids*sin(theta_r-2*pi/3) + ios;
    ics_dist = iqs*cos(theta_r+2*pi/3) + ids*sin(theta_r+2*pi/3) + ios;
    
    
    % Reference voltage generated by fixed PM field
    vqs=rstator*iqs+we*lambda_m + we*Ld*ids;         % The Eq reference : 4.4-1
    vds=rstator*ids-we*Lq*iqs;
    vos = 0;
    
    vas_ref = 1*24*cos(teta1);
    vbs_ref = 1*24*cos(teta1-2*pi/3);
    vcs_ref = 1*24*cos(teta1+2*pi/3);
    
    %begin of the pwm loop simulation (interruption)
    if t>tpwm
        tpwm=tpwm+Ts;
        cont=0;
        tal1=(vas_ref/Vdc+0.5)*Ts;
        tal2=(vbs_ref/Vdc+0.5)*Ts;
        tal3=(vcs_ref/Vdc+0.5)*Ts;
    end
    
    %end of the pwm loop simulation
    cont=cont+h;%begin simulation of the converter
    if (cont<tal1)
        q1=1;
    else
        q1=0;
    end
    
    if (cont<tal2)
        q2=1;
    else
        q2=0;
    end
    
    if (cont<tal3)
        q3=1;
    else
        q3=0;
    end
    
    %Definition of the pole voltages
    v10 = (2*q1-1)*(Vdc/2);
    v20 = (2*q2-1)*(Vdc/2);
    v30 = (2*q3-1)*(Vdc/2);
    vn0 = (1/3)*(v10+v20+v30);
    
    %Phase voltages applied to the stator of the machine
    vas = v10 - vn0;
    vbs = v20 - vn0;
    vcs = v30 - vn0;
    
    ias = ias + (vas - rs*ias)*h/ls;
    ibs = ibs + (vbs - rs*ibs)*h/ls;
    ics = ics + (vcs - rs*ics)*h/ls;
    
    vao = ((ias * rc * h ) / c) - vao;
    vbo = ((ibs * rc * h ) / c) - vbo;
    vco = ((ics * rc * h ) / c) - vco;
    
    iao = iao + ((vao - rf * iao) * h / lf);
    ibo = ibo + ((vbo - rf * ibo) * h / lf);
    ico = ico + ((vco - rf * ico) * h / lf);
    
    vao2 = iao * rl;
    vbo2 = ibo * rl;
    vco2 = ico * rl;
    
    p = vao2 * iao + vbo2 * ibo + vco2 * ico;
    
    voltage_sum_a = (vas_dist + vao2) / 2;
    voltage_sum_b = (vbs_dist + vbo2) / 2;
    voltage_sum_c = (vcs_dist + vco2) / 2;
    
    current_sum_a = ias_dist + iao;
    current_sum_b = ibs_dist + ibo;
    current_sum_c = ics_dist + ico;
    
    j = j+1;
    time(j) = t;
    
    v_as(j) = vas_dist;
    v_bs(j) = vbs_dist;
    v_cs(j) = vcs_dist;
    
    current_ias(j) = ias_dist;
    current_ibs(j) = ibs_dist;
    current_ics(j) = ics_dist;
    
    power(j) = vas_dist*ias_dist + vbs_dist*ibs_dist + vcs_dist*ics_dist;
    
    voltage_as(j)=vas;
    voltage_bs(j)=vbs;
    voltage_cs(j)=vcs;
    
    voltage_ao2(j)=vao2;
    voltage_bo2(j)=vbo2;
    voltage_co2(j)=vco2;
    
    voltage_ao(j)=vao;
    voltage_bo(j)=vbo;
    voltage_co(j)=vco;
    
    current_ao(j) = iao;
    current_bo(j) = ibo;
    current_co(j) = ico;
    
    powero(j) = p;
    
    voltage_as_ref(j)=vas_ref;
    voltage_bs_ref(j)=vbs_ref;
    voltage_cs_ref(j)=vcs_ref;
    
    voltage_s_a(j) = voltage_sum_a;
    voltage_s_b(j) = voltage_sum_b;
    voltage_s_c(j) = voltage_sum_c;
    
    current_s_a(j) = current_sum_a;
    current_s_b(j) = current_sum_b;
    current_s_c(j) = current_sum_c;
    
    current_as(j)=ias;
    current_bs(j)=ibs;
    current_cs(j)=ics;
    
    pole_v10(j)=v10;
    pole_v20(j)=v20;
    pole_v30(j)=v30;
    
    total_power(j) = voltage_sum_a * current_sum_a + voltage_sum_b * current_sum_b + voltage_sum_c * current_sum_c;
    
    voltage_n0(j)=vn0;
end

figure(1);
plot(time,v_as,'b',time,v_bs,'r--',time,v_cs,'k-.');
title('Voltage (Synchronous Generator)');
xlabel('Time (sec)');
ylabel('Voltage (V)');
grid;
legend('v_a_s','v_b_s','v_c_s');
xlim([0 tmax]);
ylim([-200 200]);

figure(2);
plot(time,current_ias,'b',time,current_ibs,'r--',time,current_ics,'k-.');
title('Current (Synchronous Generator)');
xlabel('Time (sec)');
ylabel('Current (A)');
grid;
legend('I_a_s','I_b_s','I_c_s');
xlim([0 tmax]);

figure(3);
plot(time,power,'k');
title('Power (Synchronous Generator)');
xlabel('Time (sec)');
ylabel('Power (W)');
grid;
xlim([0 tmax]);

figure(4);
plot(time,voltage_ao2,'b',time,voltage_bo2,'r--',time,voltage_co2,'k-.');
title('Voltage (Distributed Generator)');
xlabel('Time (sec)');
ylabel('Voltage (V)');
grid;
legend('v_a_s','v_b_s','v_c_s');
xlim([0 tmax]);

figure(5);
plot(time,current_ao,'b',time,current_bo,'r--',time,current_co,'k-.');
title('Current (Distributed Generator)');
xlabel('Time (sec)');
ylabel('Current (A)');
grid;
legend('I_a_s','I_b_s','I_c_s');
xlim([0 tmax]);

figure(6);
plot(time,powero,'k');
title('Power (Distributed Generator)');
xlabel('Time (sec)');
ylabel('Power (W)');
grid;
xlim([0 tmax]);

figure(7);
plot(time,voltage_s_a,'b',time,voltage_s_b,'r--',time,voltage_s_c,'k-.');
title('Voltage (Total Output)');
xlabel('Time (sec)');
ylabel('Voltage (V)');
grid;
legend('v_a_s','v_b_s','v_c_s');
xlim([0 tmax]);

figure(8);
plot(time,current_s_a,'b',time,current_s_b,'r--',time,current_s_c,'k-.');
title('Current (Total Output)');
xlabel('Time (sec)');
ylabel('Current (A)');
grid;
legend('I_a_s','I_b_s','I_c_s');
xlim([0 tmax]);

figure(9);
plot(time,total_power,'k');
title('Power (Total Output)');
xlabel('Time (sec)');
ylabel('Power (W)');
grid;
xlim([0 tmax]);